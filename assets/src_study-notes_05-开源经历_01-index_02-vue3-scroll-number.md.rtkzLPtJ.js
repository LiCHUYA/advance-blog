import { _ as _export_sfc, o as openBlock, c as createElementBlock, R as createStaticVNode } from "./chunks/framework.b55ravPP.js";
const __pageData = JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/study-notes/05-开源经历/01-index/02-vue3-scroll-number.md","filePath":"src/study-notes/05-开源经历/01-index/02-vue3-scroll-number.md","lastUpdated":1739460242000}');
const _sfc_main = { name: "src/study-notes/05-开源经历/01-index/02-vue3-scroll-number.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h2 id="vue3-number-scroll使用指南" tabindex="-1">vue3-number-scroll使用指南 <a class="header-anchor" href="#vue3-number-scroll使用指南" aria-label="Permalink to &quot;vue3-number-scroll使用指南&quot;">​</a></h2><p>​ <strong>该组件用于创建具有动画效果的数字显示，可以配置起始值、结束值、动画持续时间等属性。</strong> ​ <strong>它是基于 vue-count-to 升级改造,由于 <a href="https://panjiachen.github.io/countTo" title="原仓库地址" target="_blank" rel="noreferrer">vue-count-to</a> 不支持vue3,以及长时间没有更新的原因,我在项目中的大屏项目需要使用,所以顺便升级维护一下。</strong></p><h2 id="项目地址" tabindex="-1">项目地址 <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址&quot;">​</a></h2><p>github : <a href="https://github.com/LiCHUYA/vue3-number-scroll" target="_blank" rel="noreferrer">https://github.com/LiCHUYA/vue3-number-scroll</a></p><p><strong>描述</strong></p><table><thead><tr><th>新特性</th><th>支持</th></tr></thead><tbody><tr><td>组件支持CamelCase和kebab-case命名方式引入(本文档采用大驼峰命名展示)</td><td>✅</td></tr><tr><td>重构为Vue3所支持的Composition Api</td><td>✅</td></tr><tr><td>良好的typescript支持</td><td>✅</td></tr><tr><td>完善部分方法Api的语义化,新增一些新的属性</td><td>✅</td></tr></tbody></table><h3 id="开始使用" tabindex="-1">开始使用 <a class="header-anchor" href="#开始使用" aria-label="Permalink to &quot;开始使用&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">npm i vue3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">scroll</span></span></code></pre></div><p><strong>局部引入</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">import </span><span style="--shiki-light:#24292E;--shiki-dark:#F47067;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Vue3NumberScroll</span><span style="--shiki-light:#24292E;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> from &#39;vue3-number-scroll&#39;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">Vue3NumberScroll</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> :start-val=&quot;0&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> :end-val=&quot;10000&quot;&gt;&lt;/Vue3NumberScroll&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;/template&gt;</span></span></code></pre></div><p><strong>全局引入</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { createApp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;vue&#39;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> App </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;./App.vue&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Vue3NumberScroll </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;vue3-number-scroll&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> //引入</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> createApp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(App)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Vue3NumberScroll) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//全局注册</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">mount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;#app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h3 id="属性-props" tabindex="-1">属性（Props） <a class="header-anchor" href="#属性-props" aria-label="Permalink to &quot;属性（Props）&quot;">​</a></h3><table><thead><tr><th><strong>属性名</strong></th><th><strong>类型</strong></th><th><strong>默认值</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>startVal</code></td><td><strong>Number</strong></td><td><strong>0</strong></td><td><strong>动画的起始值</strong></td></tr><tr><td><code>endVal</code></td><td><strong>Number</strong></td><td><strong>2000</strong></td><td><strong>动画的结束值</strong></td></tr><tr><td><code>duration</code></td><td><strong>Number</strong></td><td><strong>3000</strong></td><td><strong>动画持续时间（毫秒）</strong></td></tr><tr><td><code>autoplay</code></td><td><strong>Boolean</strong></td><td><strong>true</strong></td><td><strong>是否自动播放动画</strong></td></tr><tr><td><code>decimals</code></td><td><strong>Number</strong></td><td><strong>0</strong></td><td><strong>小数位数，必须为非负整数</strong></td></tr><tr><td><code>decimal</code></td><td><strong>String</strong></td><td><strong>&#39;.&#39;</strong></td><td><strong>小数点字符</strong></td></tr><tr><td><code>separator</code></td><td><strong>String</strong></td><td><strong>&#39;,&#39;</strong></td><td><strong>千位分隔符</strong></td></tr><tr><td><code>prefix</code></td><td><strong>String</strong></td><td><strong>&#39;&#39;</strong></td><td><strong>数字前缀</strong></td></tr><tr><td><code>suffix</code></td><td><strong>String</strong></td><td><strong>&#39;&#39;</strong></td><td><strong>数字后缀</strong></td></tr><tr><td><code>useEasing</code></td><td><strong>Boolean</strong></td><td><strong>true</strong></td><td><strong>是否使用缓动函数</strong></td></tr><tr><td><code>easingFn</code></td><td><strong>Function</strong></td><td><strong>默认函数</strong></td><td><strong>缓动函数，默认使用一个缓动函数（公式：</strong><code>c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b</code>）</td></tr><tr><td><code>repeatAnimation</code></td><td><strong>Number</strong></td><td><strong>undefined</strong></td><td><strong>重复动画的间隔时间（毫秒），如果未定义，则动画不会重复,传秒数,例如1000,代表1秒,动画则会在1秒执行一次</strong></td></tr></tbody></table><p><strong>完整使用示例</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">Vue3NumberScroll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :start-val=&quot;0&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 动画开始的初始值</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :end-val=&quot;10000&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 动画结束的目标值</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :duration=&quot;3000&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 动画的持续时间，以毫秒为单位</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :autoplay=&quot;true&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 是否自动播放动画，布尔值</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :decimals=&quot;0&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 小数点后的位数，设置为0表示没有小数</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">    decimal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;.&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 小数点的符号</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">    separator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;,&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 千位分隔符</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">    prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;¥&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 数字前缀</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">    suffix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; 元&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 数字后缀</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :useEasing=&quot;true&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 是否使用缓动效果，布尔值</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :easingFn=&quot;customEasingFn&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 自定义缓动函数</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :repeatAnimation=&quot;1000&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 动画几秒钟重复一次</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    @onFinish=&quot;handleFinish&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 动画完成时触发的事件</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    @init=&quot;handleInit&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 组件初始化时触发的事件</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  /&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span></code></pre></div><h3 id="事件-events" tabindex="-1">事件（Events） <a class="header-anchor" href="#事件-events" aria-label="Permalink to &quot;事件（Events）&quot;">​</a></h3><table><thead><tr><th><strong>事件名</strong></th><th><strong>参数</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>onFinish</code></td><td><strong>-</strong></td><td><strong>动画完成时触发</strong></td></tr><tr><td><code>init</code></td><td>-</td><td><strong>组件挂载时触发</strong></td></tr></tbody></table><h3 id="方法-methods" tabindex="-1">方法（Methods） <a class="header-anchor" href="#方法-methods" aria-label="Permalink to &quot;方法（Methods）&quot;">​</a></h3><p><strong>组件暴露了一些控制动画的方法，可以使用通过实例来调用这些方法：</strong></p><h4 id="start" tabindex="-1"><code>start()</code> <a class="header-anchor" href="#start" aria-label="Permalink to &quot;`start()`&quot;">​</a></h4><p><strong>开始动画。重置动画的开始时间，并重新计算显示值。</strong></p><h4 id="pause" tabindex="-1"><code>pause()</code> <a class="header-anchor" href="#pause" aria-label="Permalink to &quot;`pause()`&quot;">​</a></h4><p><strong>暂停动画。取消当前的</strong><code>requestAnimationFrame</code>。</p><h4 id="resume" tabindex="-1"><code>resume()</code> <a class="header-anchor" href="#resume" aria-label="Permalink to &quot;`resume()`&quot;">​</a></h4><p><strong>恢复动画。从暂停的时间点重新开始动画。</strong></p><h4 id="pauseresume" tabindex="-1"><code>pauseResume()</code> <a class="header-anchor" href="#pauseresume" aria-label="Permalink to &quot;`pauseResume()`&quot;">​</a></h4><p><strong>切换动画的暂停和恢复状态。</strong></p><h4 id="reset" tabindex="-1"><code>reset()</code> <a class="header-anchor" href="#reset" aria-label="Permalink to &quot;`reset()`&quot;">​</a></h4><p><strong>重置动画。将显示值重置为起始值，并取消当前的</strong><code>requestAnimationFrame</code>。</p><p><strong>方法完整使用示例</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//template</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">Vue3NumberScroll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :start-val=&quot;0&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 动画开始的初始值</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    :end-val=&quot;10000&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> 动画结束的目标值</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">	ref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;numberScrollRefBasic&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  /&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//script</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> numberScrollRefBasic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">可以在特定时机触发实例上的方法,示例如下</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">a-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;primary&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> @click=&quot;startBasic&quot;&gt;开始&lt;/a-button&gt;</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    &lt;a-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;primary&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> @click=&quot;pauseBasic&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> danger</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;暂停&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">a-button</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">a-button</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> @click=&quot;resumeBasic&quot;&gt;重置&lt;/a-button&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">可以通过实例来触发暴露出来的方法</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">   const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> startBasic</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> =</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> ()</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F47067;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     numberScrollRefBasic.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F47067;">   }</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">   const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> pauseBasic</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> =</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> ()</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F47067;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     numberScrollRefBasic.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pause</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F47067;">   }</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">   const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> resumeBasic</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> =</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> ()</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F47067;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     numberScrollRefBasic.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">resume</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F47067;">   }</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">;</span></span></code></pre></div>', 32);
const _hoisted_33 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_33);
}
const _02Vue3ScrollNumber = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  _02Vue3ScrollNumber as default
};
